// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-around",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "space-evenly",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#000",
          "fontFamily": "System",
          "fontSize": 16,
        }
      }
      uppercase={false}
    >
      Login
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "space-evenly",
        "paddingLeft": 20,
        "paddingRight": 20,
      }
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRadius": undefined,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": undefined,
            "flexDirection": null,
            "marginLeft": 2,
            "minHeight": 65,
            "opacity": 1,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "alignSelf": "flex-start",
                "color": "#575757",
                "fontSize": 15,
                "left": null,
                "paddingRight": 5,
                "paddingTop": 5,
                "position": null,
                "right": null,
                "top": null,
              },
              Object {
                "color": "black",
              },
            ]
          }
        >
          Email/Username
        </Text>
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          placeholderTextColor="#575757"
          style={
            Array [
              Object {
                "alignSelf": "stretch",
                "color": "#000",
                "flex": 1,
                "fontSize": 17,
                "height": 50,
                "lineHeight": 18,
                "paddingLeft": 5,
                "paddingRight": 5,
                "top": 1.5,
                "width": null,
              },
              Object {
                "color": "black",
              },
            ]
          }
          underlineColorAndroid="rgba(0,0,0,0)"
        />
      </View>
      <RCTScrollView
        data={
          Array [
            "",
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "red",
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </RCTScrollView>
    </View>
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRadius": undefined,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": undefined,
            "flexDirection": null,
            "marginLeft": 2,
            "minHeight": 65,
            "opacity": 1,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "alignSelf": "flex-start",
                "color": "#575757",
                "fontSize": 15,
                "left": null,
                "paddingRight": 5,
                "paddingTop": 5,
                "position": null,
                "right": null,
                "top": null,
              },
              Object {
                "color": "black",
              },
            ]
          }
        >
          Password
        </Text>
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          placeholderTextColor="#575757"
          secureTextEntry={true}
          style={
            Array [
              Object {
                "alignSelf": "stretch",
                "color": "#000",
                "flex": 1,
                "fontSize": 13,
                "height": 50,
                "lineHeight": 18,
                "paddingLeft": 5,
                "paddingRight": 5,
                "top": 1.5,
                "width": null,
              },
              Object {
                "color": "black",
              },
            ]
          }
          underlineColorAndroid="rgba(0,0,0,0)"
        />
      </View>
      <RCTScrollView
        data={
          Array [
            "",
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "red",
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </RCTScrollView>
    </View>
    <RCTScrollView
      data={
        Array [
          "",
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontSize": 16,
                },
                Object {
                  "color": "red",
                },
              ]
            }
            uppercase={false}
          >
            
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "space-evenly",
        "width": 200,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "stretch",
          "backgroundColor": "#007aff",
          "borderBottomWidth": null,
          "borderColor": "#007aff",
          "borderLeftWidth": null,
          "borderRadius": 5,
          "borderRightWidth": null,
          "borderTopWidth": null,
          "borderWidth": undefined,
          "elevation": 2,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "marginBottom": 5,
          "marginTop": 5,
          "opacity": 1,
          "paddingBottom": 6,
          "paddingTop": 6,
          "shadowColor": undefined,
          "shadowOffset": undefined,
          "shadowOpacity": undefined,
          "shadowRadius": undefined,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#fff",
            "fontFamily": "System",
            "fontSize": 16.5,
            "marginLeft": 0,
            "marginRight": 0,
            "paddingLeft": 16,
            "paddingRight": 16,
          }
        }
        uppercase={false}
      >
         Entrar 
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "stretch",
          "backgroundColor": "#007aff",
          "borderBottomWidth": null,
          "borderColor": "#007aff",
          "borderLeftWidth": null,
          "borderRadius": 5,
          "borderRightWidth": null,
          "borderTopWidth": null,
          "borderWidth": undefined,
          "elevation": 2,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "marginBottom": 5,
          "marginTop": 5,
          "opacity": 1,
          "paddingBottom": 6,
          "paddingTop": 6,
          "shadowColor": undefined,
          "shadowOffset": undefined,
          "shadowOpacity": undefined,
          "shadowRadius": undefined,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#fff",
            "fontFamily": "System",
            "fontSize": 16.5,
            "marginLeft": 0,
            "marginRight": 0,
            "paddingLeft": 16,
            "paddingRight": 16,
          }
        }
        uppercase={false}
      >
         Registro 
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "stretch",
          "backgroundColor": "#62B1F6",
          "borderBottomWidth": null,
          "borderColor": "#007aff",
          "borderLeftWidth": null,
          "borderRadius": 5,
          "borderRightWidth": null,
          "borderTopWidth": null,
          "borderWidth": undefined,
          "elevation": 2,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "marginBottom": 5,
          "marginTop": 5,
          "opacity": 1,
          "paddingBottom": 6,
          "paddingTop": 6,
          "shadowColor": undefined,
          "shadowOffset": undefined,
          "shadowOpacity": undefined,
          "shadowRadius": undefined,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#fff",
            "fontFamily": "System",
            "fontSize": 16.5,
            "marginLeft": 0,
            "marginRight": 0,
            "paddingLeft": 16,
            "paddingRight": 16,
          }
        }
        uppercase={false}
      >
         Visitante 
      </Text>
    </View>
  </View>
</View>
`;
